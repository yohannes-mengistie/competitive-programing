
import sys, threading

input = lambda: sys.stdin.readline().strip()

def main():
    n = int(input())
    arr = list(map(int,input().split()))
    
    memo = {}
    def dp(ind):
      if  ind == n-1:
        return 0
      if ind not in memo:
          cur_val = abs(arr[ind] - arr[ind+1])+dp(ind+1) if ind+1 < n else float("inf")
          next_cur = abs(arr[ind]-arr[ind+2])+dp(ind+2) if ind+2 < n else float("inf")
          memo[ind] = min(cur_val,next_cur)
      return memo[ind]
      
    print(dp(0))


        
if __name__ == '__main__':
    
    sys.setrecursionlimit(1 << 30)
    threading.stack_size(1 << 27)

    main_thread = threading.Thread(target=main)
    main_thread.start()
    main_thread.join()
